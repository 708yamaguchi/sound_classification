#!/usr/bin/env python

# This node publish spectrogram msg from spectrum msg

from __future__ import division
import rospy
from audio_common_msgs.msg import AudioData
from std_msgs.msg import Bool

from sound_classification.msg import Spectrum, Volume, Wave
import numpy as np
import os.path as osp
import pyaudio
import rospkg
import rospy
import sys
import pylab

class ListenMicrophone:
    def __init__(self):
        rospy.init_node("listen_microphone_2", anonymous=True)
        self.audio_prefetch = rospy.get_param("~audio_prefetch", 0.5)
        self.rate = rospy.get_param("~rate", 16000)
        self.bitwidth = rospy.get_param("~bitwidth", 2)
        self.bitdepth = rospy.get_param("~bitdepth", 16)

        self.sampling_rate = rospy.get_param("~sampling_rate", 1600)
        self.audio_prefetch_bytes = int(
            self.audio_prefetch * self.rate * self.bitdepth / 8.0)
        self.audio_prefetch_buffer = str()
        self.audio_prefetch_buffer_sparse = np.array([], dtype='int16')
        self.audio_prefetch_sparse_bytes = int(
            self.audio_prefetch_bytes * self.sampling_rate // self.rate // 2)

    def subscribe(self):
        self.sub_audio = rospy.Subscriber(
            "~audio", AudioData, self._cb, queue_size=1000, buff_size=2**24)

    #def publish(self):
    #    msg = SpectrumData(
